

/*delete all records*/
delete from WS.CONFIG

/*add columns*/
alter table
   WS.CONFIG
add
   (DATA_TYPE varchar2(32) NOT NULL, LOCATION varchar2(8) NOT NULL, VERSION number NOT NULL)

/*add primary key to column*/   
alter table
   WS.CONFIG
add CONSTRAINT PK_CONFIG PRIMARY KEY (ID)

/*create auto sequence column*/
SQL> create sequence SEQ_ID start with 1 increment by 1;
Sequence created

SQL> create or replace trigger BI_ID
  2  before insert on config
  3  for each row
  4  BEGIN
  5  select SEQ_ID.nextval INTO :new.id from dual;
  6  END;
  7  /
Trigger created

/*sqlplus connect + passing argument into IN*/
sqlplus user/pass@'(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=host.com)(PORT=1526)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=lpsdm)))' @select.sql \"\'1234\',\'5678\'\"


/*usage of tablespaces*/
select    a.TABLESPACE_NAME,
ROUND(a.BYTES/1024000) "Used (MB)",
ROUND(b.BYTES/1024000) "Free (MB)",
round(((a.BYTES-b.BYTES)/a.BYTES)*100,2) "% USED"
from
(
select  TABLESPACE_NAME,
sum(BYTES) BYTES
from    dba_data_files
group   by TABLESPACE_NAME
)
a,
(
select  TABLESPACE_NAME,
sum(BYTES) BYTES ,
max(BYTES) largest
from    dba_free_space
group   by TABLESPACE_NAME
)
b
where    a.TABLESPACE_NAME=b.TABLESPACE_NAME
and a.TABLESPACE_NAME like '%'
order      by ((a.BYTES-b.BYTES)/a.BYTES) desc ;


/*usage of tablespaces B*/
select df.tablespace_name "Tablespace",
totalusedspace "Used MB",
(df.totalspace - tu.totalusedspace) "Free MB",
df.totalspace "Total MB",
round(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace))
"Pct. Free"
from
(select tablespace_name,
round(sum(bytes) / 1048576) TotalSpace
from dba_data_files 
group by tablespace_name) df,
(select round(sum(bytes)/(1024*1024)) totalusedspace, tablespace_name
from dba_segments 
group by tablespace_name) tu
where df.tablespace_name = tu.tablespace_name ;


/*size of schema*/
SELECT sum(bytes)/1024/1024/1024 as GB
  FROM dba_segments
 WHERE owner = 'SCHEMA';

/*sqlplus format file friendly*/
set wrap off - not wraping lines
set linesize 16000 - long lines
set heading off - multiple headers off

/*date format*/
alter session set nls_date_format='yyyymmddhh24miss';

/*inputs into sql*/
select * from users where username='&1';
#!/bin/bash
MY_USER=bob
sqlplus <user>/<password> @file-with-sql-1.sql $MY_USER

/*check oracle version*/
SELECT * FROM V$VERSION

/*check database name*/
select ora_database_name from dual;

/*check user name*/
select user from dual;

/*ORACLE export schema*/
exp USERID=user/pass OWNER=SCHEMA FILE=exp_20150915.dmp
expdp scott/tiger@db10g schemas=SCOTT directory=TEST_DIR dumpfile=SCOTT.dmp logfile=expdpSCOTT.log

/*info about sessions/connections*/
select SID, USERNAME, STATUS, SCHEMANAME, OSUSER, PROCESS, MACHINE, PROGRAM  from V$SESSION;

/*sqlplus into csv*/
ALTER SESSION SET nls_date_format = 'yyyy-mm-dd HH24:mi:ss';  -- date format
set colsep ,     -- separate columns with a comma
set pagesize 0   -- No header rows
set trimspool on -- remove trailing blanks
set headsep off  -- this may or may not be useful...depends on your headings.
set linesize X   -- X should be the sum of the column widths
set numw X       -- X should be the length you want for numbers (avoid scientific notation on IDs)

spool myfile.csv

select table_name, tablespace_name 
  from all_tables
 where owner = 'SYS'
   and tablespace_name is not null;

spool off

sed 's/\s+,/,/' myfile.csv
sed 's/,\s+/,/' myfile.csv
sed 's/\s+|/|/' myfile.csv



/*sqlplus user friendly*/
set pagesize 50000
set colsep |
set linesize 2000
set lines 512
set trimout on
set tab off

/*catching sqlplus in bash*/
( echo "WHENEVER SQLERROR EXIT SQL.SQLCODE;"
  echo "WHENEVER OSERROR EXIT FAILURE;"
   echo "@${jSQL}"
   echo "EXIT SUCCESS;"
) | sqlplus /


